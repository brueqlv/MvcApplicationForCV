// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcApplicationForCV.Models;

#nullable disable

namespace MvcApplicationForCV.Migrations
{
    [DbContext(typeof(MvcApplicationForCvDbContext))]
    partial class MvcApplicationForCvDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MvcApplicationForCV.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonalInfoId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StreetNumber")
                        .HasColumnType("int");

                    b.HasKey("AddressId");

                    b.HasIndex("PersonalInfoId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("MvcApplicationForCV.Models.CV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonalInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonalInfoId");

                    b.ToTable("CVs");
                });

            modelBuilder.Entity("MvcApplicationForCV.Models.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducationId"));

                    b.Property<int?>("CVId")
                        .HasColumnType("int");

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EducationStatuss")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EducationId");

                    b.HasIndex("CVId");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("MvcApplicationForCV.Models.LanguageSkills", b =>
                {
                    b.Property<int>("LanguageSkillsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageSkillsId"));

                    b.Property<int?>("CVId")
                        .HasColumnType("int");

                    b.Property<int>("Listening")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reading")
                        .HasColumnType("int");

                    b.Property<int>("Speaking")
                        .HasColumnType("int");

                    b.Property<int>("Writing")
                        .HasColumnType("int");

                    b.HasKey("LanguageSkillsId");

                    b.HasIndex("CVId");

                    b.ToTable("LanguageSkills");
                });

            modelBuilder.Entity("MvcApplicationForCV.Models.PersonalInfo", b =>
                {
                    b.Property<int>("PersonalInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonalInfoId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonalInfoId");

                    b.ToTable("PersonalInfo");
                });

            modelBuilder.Entity("MvcApplicationForCV.Models.WorkExperience", b =>
                {
                    b.Property<int>("WorkExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkExperienceId"));

                    b.Property<int?>("CVId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsStillWorking")
                        .HasColumnType("bit");

                    b.Property<string>("PositionDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WeeklyWorkLoad")
                        .HasColumnType("int");

                    b.HasKey("WorkExperienceId");

                    b.HasIndex("CVId");

                    b.ToTable("WorkExperience");
                });

            modelBuilder.Entity("MvcApplicationForCV.Models.Address", b =>
                {
                    b.HasOne("MvcApplicationForCV.Models.PersonalInfo", null)
                        .WithMany("AddressList")
                        .HasForeignKey("PersonalInfoId");
                });

            modelBuilder.Entity("MvcApplicationForCV.Models.CV", b =>
                {
                    b.HasOne("MvcApplicationForCV.Models.PersonalInfo", "PersonalInfo")
                        .WithMany()
                        .HasForeignKey("PersonalInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalInfo");
                });

            modelBuilder.Entity("MvcApplicationForCV.Models.Education", b =>
                {
                    b.HasOne("MvcApplicationForCV.Models.CV", null)
                        .WithMany("Educations")
                        .HasForeignKey("CVId");
                });

            modelBuilder.Entity("MvcApplicationForCV.Models.LanguageSkills", b =>
                {
                    b.HasOne("MvcApplicationForCV.Models.CV", null)
                        .WithMany("LanguageSkills")
                        .HasForeignKey("CVId");
                });

            modelBuilder.Entity("MvcApplicationForCV.Models.WorkExperience", b =>
                {
                    b.HasOne("MvcApplicationForCV.Models.CV", null)
                        .WithMany("WorkExperiences")
                        .HasForeignKey("CVId");
                });

            modelBuilder.Entity("MvcApplicationForCV.Models.CV", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("LanguageSkills");

                    b.Navigation("WorkExperiences");
                });

            modelBuilder.Entity("MvcApplicationForCV.Models.PersonalInfo", b =>
                {
                    b.Navigation("AddressList");
                });
#pragma warning restore 612, 618
        }
    }
}
